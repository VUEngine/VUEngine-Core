{
    "folders": [
        {
            "path": "."
        }
    ],
    "items": {
        "BrightnessRepeat": {
            "HJzLvhLSpJs16gla": {
                "description": "The default brightness repeat configuration as provided by Nintendo",
                "mirror": true,
                "name": "Default",
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            }
        },
        "ColumnTable": {
            "8pDwzeqM8YmSep1h": {
                "description": "The default column table as provided by Nintendo",
                "mirror": false,
                "name": "Default",
                "values": [
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 14,
                        "time": 0
                    },
                    {
                        "repeat": 11,
                        "time": 12
                    },
                    {
                        "repeat": 10,
                        "time": 6
                    },
                    {
                        "repeat": 9,
                        "time": 6
                    },
                    {
                        "repeat": 8,
                        "time": 10
                    },
                    {
                        "repeat": 8,
                        "time": 2
                    },
                    {
                        "repeat": 7,
                        "time": 10
                    },
                    {
                        "repeat": 7,
                        "time": 4
                    },
                    {
                        "repeat": 6,
                        "time": 14
                    },
                    {
                        "repeat": 6,
                        "time": 10
                    },
                    {
                        "repeat": 6,
                        "time": 6
                    },
                    {
                        "repeat": 6,
                        "time": 2
                    },
                    {
                        "repeat": 6,
                        "time": 0
                    },
                    {
                        "repeat": 5,
                        "time": 12
                    },
                    {
                        "repeat": 5,
                        "time": 10
                    },
                    {
                        "repeat": 5,
                        "time": 8
                    },
                    {
                        "repeat": 5,
                        "time": 6
                    },
                    {
                        "repeat": 5,
                        "time": 4
                    },
                    {
                        "repeat": 5,
                        "time": 2
                    },
                    {
                        "repeat": 5,
                        "time": 0
                    },
                    {
                        "repeat": 5,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 14
                    },
                    {
                        "repeat": 4,
                        "time": 12
                    },
                    {
                        "repeat": 4,
                        "time": 12
                    },
                    {
                        "repeat": 4,
                        "time": 10
                    },
                    {
                        "repeat": 4,
                        "time": 10
                    },
                    {
                        "repeat": 4,
                        "time": 8
                    },
                    {
                        "repeat": 4,
                        "time": 8
                    },
                    {
                        "repeat": 4,
                        "time": 6
                    },
                    {
                        "repeat": 4,
                        "time": 6
                    },
                    {
                        "repeat": 4,
                        "time": 6
                    },
                    {
                        "repeat": 4,
                        "time": 4
                    },
                    {
                        "repeat": 4,
                        "time": 4
                    },
                    {
                        "repeat": 4,
                        "time": 4
                    },
                    {
                        "repeat": 4,
                        "time": 2
                    },
                    {
                        "repeat": 4,
                        "time": 2
                    },
                    {
                        "repeat": 4,
                        "time": 2
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 12
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 3,
                        "time": 14
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 0
                    },
                    {
                        "repeat": 4,
                        "time": 2
                    },
                    {
                        "repeat": 4,
                        "time": 2
                    },
                    {
                        "repeat": 4,
                        "time": 2
                    },
                    {
                        "repeat": 4,
                        "time": 4
                    },
                    {
                        "repeat": 4,
                        "time": 4
                    },
                    {
                        "repeat": 4,
                        "time": 4
                    },
                    {
                        "repeat": 4,
                        "time": 6
                    },
                    {
                        "repeat": 4,
                        "time": 6
                    },
                    {
                        "repeat": 4,
                        "time": 6
                    },
                    {
                        "repeat": 4,
                        "time": 8
                    },
                    {
                        "repeat": 4,
                        "time": 8
                    },
                    {
                        "repeat": 4,
                        "time": 10
                    },
                    {
                        "repeat": 4,
                        "time": 10
                    },
                    {
                        "repeat": 4,
                        "time": 12
                    },
                    {
                        "repeat": 4,
                        "time": 12
                    },
                    {
                        "repeat": 4,
                        "time": 14
                    },
                    {
                        "repeat": 5,
                        "time": 0
                    },
                    {
                        "repeat": 5,
                        "time": 0
                    },
                    {
                        "repeat": 5,
                        "time": 2
                    },
                    {
                        "repeat": 5,
                        "time": 4
                    },
                    {
                        "repeat": 5,
                        "time": 6
                    },
                    {
                        "repeat": 5,
                        "time": 8
                    },
                    {
                        "repeat": 5,
                        "time": 10
                    },
                    {
                        "repeat": 5,
                        "time": 12
                    },
                    {
                        "repeat": 6,
                        "time": 0
                    },
                    {
                        "repeat": 6,
                        "time": 2
                    },
                    {
                        "repeat": 6,
                        "time": 6
                    },
                    {
                        "repeat": 6,
                        "time": 10
                    },
                    {
                        "repeat": 6,
                        "time": 14
                    },
                    {
                        "repeat": 7,
                        "time": 4
                    },
                    {
                        "repeat": 7,
                        "time": 10
                    },
                    {
                        "repeat": 8,
                        "time": 2
                    },
                    {
                        "repeat": 8,
                        "time": 10
                    },
                    {
                        "repeat": 9,
                        "time": 6
                    },
                    {
                        "repeat": 10,
                        "time": 6
                    },
                    {
                        "repeat": 11,
                        "time": 12
                    },
                    {
                        "repeat": 14,
                        "time": 0
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    },
                    {
                        "repeat": 15,
                        "time": 14
                    }
                ]
            }
        },
        "Events": {
            "OiTWgTHoMOJYsmT7": {
                "events": [
                    "ActorBounced",
                    "AnimationCompleted",
                    "CharSetDeleted",
                    "CharSetRewritten",
                    "CommunicationsConnected",
                    "CommunicationsTransmissionCompleted",
                    "ContainerDeleted",
                    "EffectFadeComplete",
                    "EffectFadeStart",
                    "EffectFadeStop",
                    "EntityLoaded",
                    "GamePaused",
                    "GameUnpaused",
                    "MinuteChanged",
                    "NextStateSet",
                    "SecondChanged",
                    "ShapeChanged",
                    "ShapeDeleted",
                    "SoundFinished",
                    "SoundReleased",
                    "SpatialObjectDeleted",
                    "StageChildStreamedOut",
                    "TextureRewritten"
                ]
            }
        },
        "Font": {
            "rxSiRnmucUqeJJNE": {
                "name": "Default",
                "tiles": "VUEngineFontTiles",
                "type": "bgmap",
                "offset": 0,
                "characterCount": 256,
                "charactersPerLine": 32,
                "size": {
                    "x": 1,
                    "y": 1
                }
            },
            "rBCHVLXzP43ZqXCR": {
                "name": "Profiler",
                "tiles": "VUEngineProfilerFontTiles",
                "type": "bgmap",
                "offset": 46,
                "characterCount": 45,
                "charactersPerLine": 45,
                "size": {
                    "x": 1,
                    "y": 1
                }
            }
        },
        "Image": {
            "bfdJ9utLumjCiFwm": {
                "folder": "assets/images/VUEngineFont",
                "name": "VUEngineFont",
                "section": "rom",
                "tileset": {
                    "shared": false,
                    "reduce": false,
                    "compress": false
                },
                "map": {
                    "generate": false,
                    "reduce": {
                        "flipped": false,
                        "unique": false
                    },
                    "compress": false
                },
                "animation": {
                    "isAnimation": false,
                    "individualFiles": false,
                    "frameWidth": 0,
                    "frameHeight": 0
                },
                "_converted": [
                    {
                        "image": "VUEngineFont.png",
                        "timestamp": 123456,
                        "name": "VUEngineFont",
                        "tiles": 256
                    }
                ]
            },
            "S1RY2aSY9ZkLikuh": {
                "images": "assets/images/VUEngineProfilerFont",
                "name": "VUEngineProfilerFont",
                "section": "rom",
                "tileset": {
                    "shared": false,
                    "reduce": false,
                    "compress": false
                },
                "map": {
                    "generate": false,
                    "reduce": {
                        "flipped": false,
                        "unique": false
                    },
                    "compress": false
                },
                "animation": {
                    "isAnimation": false,
                    "individualFiles": false,
                    "frameWidth": 0,
                    "frameHeight": 0
                },
                "_converted": [
                    {
                        "image": "VUEngineProfilerFont.png",
                        "timestamp": 123456,
                        "name": "VUEngineProfilerFont",
                        "tiles": 45
                    }
                ]
            }
        },
        "Messages": {
            "c5aiN73gemaLA48M": {
                "messages": [
                    "BodyBounced",
                    "BodyChangedDirection",
                    "BodyStartedMoving",
                    "BodyStopped",
                    "CheckIfRemoteIsReady",
                    "EntityRemoved",
                    "HighFps",
                    "KeyHold",
                    "KeyPressed",
                    "KeyReleased",
                    "LastCommunicationMessage"
                ]
            }
        },
        "Project": {
            "imJC2R0U57vyVVY9": {
                "name": "VUEngine Core",
                "author": "Jorge Eremiev <jorgech3@gmail.com> and Christian Radke <c.radke@posteo.de>",
                "description": "Core VUEngine library"
            }
        },
        "WaveForm": {
            "zWndaKELk5FT82xf": {
                "name": "Glocken",
                "values": [
                    26,
                    53,
                    38,
                    45,
                    50,
                    25,
                    29,
                    42,
                    36,
                    48,
                    62,
                    46,
                    37,
                    33,
                    3,
                    24,
                    26,
                    40,
                    41,
                    31,
                    28,
                    18,
                    2,
                    16,
                    28,
                    22,
                    35,
                    39,
                    15,
                    19,
                    26,
                    11
                ]
            },
            "GefMmqceDVD6Xk11": {
                "name": "Linear",
                "values": [
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12,
                    12
                ]
            },
            "BwHW7JNrex6wMinO": {
                "name": "Organ",
                "values": [
                    26,
                    63,
                    56,
                    56,
                    39,
                    35,
                    39,
                    17,
                    19,
                    38,
                    12,
                    38,
                    35,
                    34,
                    30,
                    0,
                    26,
                    63,
                    35,
                    30,
                    30,
                    26,
                    53,
                    26,
                    44,
                    47,
                    26,
                    29,
                    26,
                    8,
                    9,
                    0
                ]
            },
            "YLi4OpkvXcUU4BDN": {
                "name": "PCM",
                "values": [
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63
                ]
            },
            "h6pHqEdKMGJU4HHl": {
                "name": "Piano",
                "values": [
                    31,
                    28,
                    30,
                    45,
                    49,
                    34,
                    27,
                    28,
                    27,
                    25,
                    27,
                    41,
                    44,
                    46,
                    50,
                    47,
                    57,
                    61,
                    50,
                    43,
                    33,
                    36,
                    33,
                    24,
                    20,
                    32,
                    33,
                    19,
                    26,
                    21,
                    20,
                    29
                ]
            },
            "sxbCyI9EXlWeEmmD": {
                "name": "SawSquare",
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    8,
                    16,
                    24,
                    26,
                    40,
                    48,
                    56,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63
                ]
            },
            "S17ifoKaHu4DdzeZ": {
                "name": "Sawtooth",
                "values": [
                    0,
                    2,
                    4,
                    6,
                    8,
                    10,
                    12,
                    14,
                    16,
                    18,
                    20,
                    22,
                    24,
                    26,
                    28,
                    30,
                    32,
                    34,
                    36,
                    38,
                    40,
                    42,
                    44,
                    46,
                    48,
                    50,
                    52,
                    54,
                    56,
                    58,
                    60,
                    62
                ]
            },
            "6QP1zxkpXVn9SMlC": {
                "name": "Sine",
                "values": [
                    31,
                    37,
                    43,
                    48,
                    53,
                    57,
                    60,
                    62,
                    62,
                    62,
                    60,
                    57,
                    53,
                    48,
                    43,
                    37,
                    31,
                    25,
                    19,
                    14,
                    9,
                    5,
                    2,
                    0,
                    0,
                    0,
                    2,
                    5,
                    9,
                    14,
                    19,
                    25
                ]
            },
            "2v98yCQLE9E9Tkok": {
                "name": "SinePlusAlpha",
                "values": [
                    26,
                    41,
                    48,
                    51,
                    51,
                    31,
                    31,
                    53,
                    57,
                    62,
                    46,
                    46,
                    51,
                    42,
                    35,
                    26,
                    26,
                    26,
                    29,
                    22,
                    14,
                    6,
                    2,
                    2,
                    6,
                    11,
                    15,
                    15,
                    14,
                    13,
                    16,
                    3
                ]
            },
            "DyL0pycvSqXcRbj8": {
                "name": "Square",
                "values": [
                    38,
                    25,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    27,
                    42,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63
                ]
            },
            "HhyDChu5lbaTA9YF": {
                "name": "SquareDuty75",
                "values": [
                    38,
                    25,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    27,
                    42,
                    63,
                    63,
                    63,
                    63,
                    63,
                    63
                ]
            },
            "XpMdT55BQzCPKlVX": {
                "name": "Triangle",
                "values": [
                    0,
                    4,
                    8,
                    12,
                    16,
                    20,
                    24,
                    28,
                    31,
                    35,
                    39,
                    43,
                    47,
                    51,
                    55,
                    59,
                    62,
                    58,
                    54,
                    50,
                    46,
                    42,
                    38,
                    34,
                    31,
                    27,
                    23,
                    19,
                    15,
                    11,
                    7,
                    3
                ]
            },
            "D28pZWSn7EQDMtgR": {
                "name": "Trumpet",
                "values": [
                    38,
                    37,
                    35,
                    32,
                    32,
                    35,
                    35,
                    33,
                    30,
                    34,
                    38,
                    39,
                    38,
                    34,
                    32,
                    39,
                    37,
                    16,
                    0,
                    40,
                    42,
                    35,
                    31,
                    30,
                    30,
                    33,
                    37,
                    34,
                    32,
                    34,
                    37,
                    39
                ]
            },
            "51fdDnFQlDtpmU6W": {
                "name": "Violin",
                "values": [
                    1,
                    18,
                    37,
                    38,
                    19,
                    26,
                    28,
                    29,
                    4,
                    0,
                    19,
                    1,
                    23,
                    26,
                    16,
                    48,
                    49,
                    50,
                    61,
                    49,
                    54,
                    59,
                    38,
                    32,
                    30,
                    51,
                    62,
                    51,
                    55,
                    54,
                    41,
                    15
                ]
            }
        }
    },
    "templates": {
        "BrightnessRepeatSpec.c": {
            "target": "assets/BrightnessRepeat/${_id}.c",
            "template": "templates/BrightnessRepeatSpec.c.nj",
            "itemSpecific": "BrightnessRepeat"
        },
        "ColumnTableSpec.c": {
            "target": "assets/ColumnTable/${_id}.c",
            "template": "templates/ColumnTableSpec.c.nj",
            "itemSpecific": "ColumnTable"
        },
        "config.h": {
            "target": "source/config.h",
            "template": "templates/config.h.nj"
        },
        "config.make": {
            "target": "config.make",
            "template": "templates/config.make.nj",
            "events": [
                {
                    "type": "installedPluginsChanged"
                }
            ]
        },
        "debugConfig.h": {
            "target": "source/debugConfig.h",
            "template": "templates/debugConfig.h.nj"
        },
        "Fonts.c": {
            "target": "assets/Font/Fonts.c",
            "template": "templates/Fonts.c.nj",
            "events": [
                {
                    "type": "installedPluginsChanged"
                },
                {
                    "type": "itemOfTypeGotDeleted",
                    "value": "Font"
                }
            ]
        },
        "Fonts.h": {
            "target": "source/assets/Fonts.h",
            "template": "templates/Fonts.h.nj",
            "events": [
                {
                    "type": "installedPluginsChanged"
                },
                {
                    "type": "itemOfTypeGotDeleted",
                    "value": "Font"
                }
            ]
        },
        "FontSpec.c": {
            "target": "assets/Font/${_id}.c",
            "template": "templates/FontSpec.c.nj",
            "itemSpecific": "Font"
        },
        "GameEvents.h": {
            "target": "source/GameEvents.h",
            "template": "templates/GameEvents.h.nj"
        },
        "romHeader.h": {
            "target": "source/romHeader.h",
            "template": "templates/romHeader.h.nj"
        },
        "RumbleEffectSpec.c": {
            "target": "assets/RumbleEffect/${_id}.c",
            "template": "templates/RumbleEffectSpec.c.nj",
            "itemSpecific": "RumbleEffect"
        },
        "RumbleEffects.h": {
            "target": "source/assets/RumbleEffects.h",
            "template": "templates/RumbleEffects.h.nj"
        },
        "vb_release.ld": {
            "target": "lib/compiler/linker/vb_release.ld",
            "template": "templates/vb.ld.nj"
        },
        "vb_beta.ld": {
            "target": "lib/compiler/linker/vb_beta.ld",
            "template": "templates/vb.ld.nj"
        },
        "vb_tools.ld": {
            "target": "lib/compiler/linker/vb_tools.ld",
            "template": "templates/vb_tools.ld.nj"
        },
        "vb_debug.ld": {
            "target": "lib/compiler/linker/vb_debug.ld",
            "template": "templates/vb_tools.ld.nj"
        },
        "WaveForms.h": {
            "target": "source/assets/WaveForms.h",
            "template": "templates/WaveForms.h.nj",
            "events": [
                {
                    "type": "installedPluginsChanged"
                }
            ]
        },
        "WaveFormSpec.c": {
            "target": "assets/WaveForm/${_id}.c",
            "template": "templates/WaveForm.c.nj",
            "itemSpecific": "WaveForm"
        }
    },
    "types": {
        "BrightnessRepeat": {
            "schema": {
                "title": "Brightness Repeat",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "default": 15,
                            "minimum": 0,
                            "maximum": 15
                        },
                        "maxItems": 96,
                        "minItems": 48
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "BrightnessRepeatEditor",
                "scope": "#"
            },
            "multiple": true,
            "category": "Effects",
            "icon": "fa fa-sun-o",
            "templates": [
                "BrightnessRepeatSpec.c"
            ]
        },
        "ColumnTable": {
            "schema": {
                "title": "Column Table",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": true
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "repeat": {
                                    "type": "integer",
                                    "default": 15,
                                    "minimum": 0,
                                    "maximum": 15
                                },
                                "time": {
                                    "type": "integer",
                                    "default": 15,
                                    "minimum": 0,
                                    "maximum": 15
                                }
                            }
                        },
                        "maxItems": 256,
                        "minItems": 128,
                        "default": []
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "ColumnTableEditor",
                "scope": "#"
            },
            "multiple": true,
            "category": "Effects",
            "icon": "fa fa-table",
            "templates": [
                "ColumnTableSpec.c"
            ]
        },
        "Compiler": {
            "schema": {
                "title": "Compiler Config",
                "properties": {
                    "framePointer": {
                        "type": "boolean",
                        "default": false
                    },
                    "optimization": {
                        "type": "string",
                        "oneOf": [
                            {
                                "const": "O0",
                                "title": "O0",
                                "description": "No optimization"
                            },
                            {
                                "const": "O1",
                                "title": "O1",
                                "description": "Optimize minimally"
                            },
                            {
                                "const": "O2",
                                "title": "O2",
                                "description": "Optimize more"
                            },
                            {
                                "const": "O3",
                                "title": "O3",
                                "description": "Optimize even more"
                            },
                            {
                                "const": "Ofast",
                                "title": "Ofast",
                                "description": "Optimize very aggressively"
                            },
                            {
                                "const": "Os",
                                "title": "Os",
                                "description": "Optimize for size"
                            }
                        ],
                        "default": "O2"
                    },
                    "output": {
                        "type": "string",
                        "oneOf": [
                            {
                                "const": "c",
                                "title": "C"
                            }
                        ],
                        "default": "c"
                    },
                    "prologFunctions": {
                        "type": "boolean",
                        "default": false
                    },
                    "scrambleBinary": {
                        "type": "boolean",
                        "default": false
                    },
                    "memorySections": {
                        "type": "object",
                        "properties": {
                            "dram": {
                                "type": "object",
                                "properties": {
                                    "length": {
                                        "type": "integer",
                                        "default": -24,
                                        "maximum": 0
                                    },
                                    "origin": {
                                        "type": "string",
                                        "default": ""
                                    }
                                }
                            },
                            "exp": {
                                "type": "object",
                                "properties": {
                                    "length": {
                                        "type": "integer",
                                        "default": 16,
                                        "minimum": 0
                                    },
                                    "origin": {
                                        "type": "string",
                                        "default": "0x04000000"
                                    }
                                }
                            },
                            "rom": {
                                "type": "object",
                                "properties": {
                                    "length": {
                                        "type": "integer",
                                        "default": 16,
                                        "minimum": 0
                                    },
                                    "origin": {
                                        "type": "string",
                                        "default": "0x07000000"
                                    }
                                }
                            },
                            "sram": {
                                "type": "object",
                                "properties": {
                                    "length": {
                                        "type": "integer",
                                        "default": 16,
                                        "minimum": 0
                                    },
                                    "origin": {
                                        "type": "string",
                                        "default": "0x06000000"
                                    }
                                }
                            },
                            "wram": {
                                "type": "object",
                                "properties": {
                                    "length": {
                                        "type": "integer",
                                        "default": 64,
                                        "minimum": 0
                                    },
                                    "origin": {
                                        "type": "string",
                                        "default": "0x05000000"
                                    }
                                }
                            }
                        }
                    },
                    "memoryUsage": {
                        "type": "object",
                        "properties": {
                            "initializedData": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": ".data",
                                        "title": ".data"
                                    },
                                    {
                                        "const": ".dram_bss",
                                        "title": ".dram_bss"
                                    },
                                    {
                                        "const": ".sbss",
                                        "title": ".sbss"
                                    },
                                    {
                                        "const": ".sdata",
                                        "title": ".sdata"
                                    },
                                    {
                                        "const": ".sram_bs",
                                        "title": ".sram_bs"
                                    }
                                ],
                                "default": ".sdata"
                            },
                            "memoryPool": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": ".dram_bss",
                                        "title": ".dram_bss"
                                    },
                                    {
                                        "const": ".sbss",
                                        "title": ".sbss"
                                    },
                                    {
                                        "const": ".sdata",
                                        "title": ".sdata"
                                    },
                                    {
                                        "const": ".sram_bs",
                                        "title": ".sram_bs"
                                    }
                                ],
                                "default": ".sdata"
                            },
                            "staticSingletons": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": ".dram_bss",
                                        "title": ".dram_bss"
                                    },
                                    {
                                        "const": ".sbss",
                                        "title": ".sbss"
                                    },
                                    {
                                        "const": ".sdata",
                                        "title": ".sdata"
                                    },
                                    {
                                        "const": ".sram_bs",
                                        "title": ".sram_bs"
                                    }
                                ],
                                "default": ".dram_bss"
                            },
                            "uninitializedData": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": ".dram_bss",
                                        "title": ".dram_bss"
                                    },
                                    {
                                        "const": ".sbss",
                                        "title": ".sbss"
                                    },
                                    {
                                        "const": ".sdata",
                                        "title": ".sdata"
                                    },
                                    {
                                        "const": ".sram_bs",
                                        "title": ".sram_bs"
                                    }
                                ],
                                "default": ".sbss"
                            },
                            "virtualTables": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": ".dram_bss",
                                        "title": ".dram_bss"
                                    },
                                    {
                                        "const": ".sbss",
                                        "title": ".sbss"
                                    },
                                    {
                                        "const": ".sdata",
                                        "title": ".sdata"
                                    },
                                    {
                                        "const": ".sram_bs",
                                        "title": ".sram_bs"
                                    }
                                ],
                                "default": ".dram_bss"
                            }
                        }
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "Categorization",
                "elements": [
                    {
                        "type": "Category",
                        "label": "Compiler Config",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/framePointer",
                                        "label": "Frame Pointer"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optimization",
                                        "label": "Optimization"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/output",
                                        "label": "Output"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/prologFunctions",
                                        "label": "Prolog Functions"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/scrambleBinary",
                                        "label": "Scramble Binary"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Memory Sections",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Group",
                                        "label": "DRAM",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/dram/properties/length",
                                                        "label": "Length"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/dram/properties/origin",
                                                        "label": "Origin"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Group",
                                        "label": "Expansion",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/exp/properties/length",
                                                        "label": "Length"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/exp/properties/origin",
                                                        "label": "Origin"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Group",
                                        "label": "WRAM",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/wram/properties/length",
                                                        "label": "Length"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/wram/properties/origin",
                                                        "label": "Origin"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Group",
                                        "label": "SRAM",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/sram/properties/length",
                                                        "label": "Length"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/sram/properties/origin",
                                                        "label": "Origin"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Group",
                                        "label": "ROM",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/rom/properties/length",
                                                        "label": "Length"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/memorySections/properties/rom/properties/origin",
                                                        "label": "Origin"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Memory Usage",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryUsage/properties/initializedData",
                                        "label": "Initialized Data"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryUsage/properties/memoryPool",
                                        "label": "Memory Pools"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryUsage/properties/staticSingletons",
                                        "label": "Static Singletons"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryUsage/properties/uninitializedData",
                                        "label": "Uninitialized Data"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryUsage/properties/virtualTables",
                                        "label": "Virtual Tables"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "icon": "fa fa-cogs",
            "multiple": false,
            "category": "Configuration",
            "templates": [
                "config.make",
                "vb_release.ld",
                "vb_beta.ld",
                "vb_tools.ld",
                "vb_debug.ld",
                "config.h"
            ]
        },
        "DebugMacros": {
            "schema": {
                "title": "Debug Macros",
                "properties": {
                    "macros": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "default": ""
                                },
                                "value": {
                                    "type": "string",
                                    "default": ""
                                },
                                "define": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "dependent": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "default": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "required": []
            },
            "icon": "fa fa-bug",
            "multiple": false,
            "category": "Configuration",
            "templates": [
                "debugConfig.h"
            ]
        },
        "EngineConfig": {
            "schema": {
                "title": "Engine Config",
                "properties": {
                    "affine": {
                        "type": "object",
                        "properties": {
                            "maxRowsPerCall": {
                                "type": "integer",
                                "description": "The maximum number of rows to write on each call to affine calculation functions.",
                                "default": 16
                            },
                            "maxScale": {
                                "type": "integer",
                                "description": "The maximum possible scale. Affects param table allocation space.",
                                "default": 2
                            }
                        }
                    },
                    "animation": {
                        "type": "object",
                        "properties": {
                            "maxAnimationFunctionNameLength": {
                                "type": "integer",
                                "description": "The maximum length of an animation function name.",
                                "default": 16
                            },
                            "maxFramesPerAnimationFunction": {
                                "type": "integer",
                                "description": "The maximum number of frames per animation function.",
                                "default": 16
                            }
                        }
                    },
                    "brightness": {
                        "type": "object",
                        "properties": {
                            "brightRed": {
                                "type": "integer",
                                "default": 128
                            },
                            "mediumRed": {
                                "type": "integer",
                                "default": 64
                            },
                            "darkRed": {
                                "type": "integer",
                                "default": 32
                            },
                            "fadeDelay": {
                                "type": "integer",
                                "default": 16
                            },
                            "fadeIncrement": {
                                "type": "integer",
                                "default": 1
                            }
                        }
                    },
                    "chars": {
                        "type": "object",
                        "properties": {
                            "totalChars": {
                                "type": "integer",
                                "description": "The total number of available chars in char memory",
                                "default": 2048
                            }
                        }
                    },
                    "communications": {
                        "type": "object",
                        "properties": {
                            "enable": {
                                "type": "boolean",
                                "description": "Enable communications at the start of the game, e.g. for link play.",
                                "default": false
                            }
                        }
                    },
                    "debug": {
                        "type": "object",
                        "properties": {
                            "alertVipOvertime": {
                                "type": "boolean",
                                "default": false
                            },
                            "dimmForProfiling": {
                                "type": "boolean",
                                "default": false
                            },
                            "enableProfiler": {
                                "type": "boolean",
                                "default": false
                            },
                            "printFramerate": {
                                "type": "boolean",
                                "default": false
                            },
                            "profileStreaming": {
                                "type": "boolean",
                                "default": false
                            },
                            "showDetailedMemoryPoolStatus": {
                                "type": "boolean",
                                "default": false
                            },
                            "showMemoryPoolStatus": {
                                "type": "boolean",
                                "default": false
                            },
                            "showStackOverflowAlert": {
                                "type": "boolean",
                                "default": false
                            },
                            "showStreamingProfiling": {
                                "type": "boolean",
                                "default": false
                            },
                            "stackHeadroom": {
                                "type": "integer",
                                "default": 1000
                            }
                        }
                    },
                    "exceptions": {
                        "type": "object",
                        "properties": {
                            "position": {
                                "type": "object",
                                "description": "The camera coordinates for the output of exceptions.",
                                "properties": {
                                    "x": {
                                        "type": "integer",
                                        "default": 0,
                                        "maximum": 47,
                                        "minimum": 0
                                    },
                                    "y": {
                                        "type": "integer",
                                        "default": 0,
                                        "maximum": 27,
                                        "minimum": 0
                                    }
                                }
                            }
                        }
                    },
                    "frameRate": {
                        "type": "object",
                        "properties": {
                            "forceVipSync": {
                                "type": "boolean",
                                "description": "When defined, the engine skips to the next game frame when the VIP's GAMESTART interrupt is fired before the current game frame is done.",
                                "default": false
                            },
                            "frameCycle": {
                                "type": "integer",
                                "oneOf": [
                                    {
                                        "const": 0,
                                        "title": "50 FPS"
                                    },
                                    {
                                        "const": 1,
                                        "title": "25 FPS"
                                    }
                                ]
                            },
                            "runDelayedMessagesAtHalfFrameRate": {
                                "type": "boolean",
                                "description": "Define to dispatch the delayed messages every other game frame cycle.",
                                "default": false
                            },
                            "timerResolution": {
                                "type": "integer",
                                "default": 10
                            }
                        }
                    },
                    "game": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "default": ""
                                },
                                "type": {
                                    "type": "string",
                                    "oneOf": [
                                        {
                                            "const": "text",
                                            "title": "Text"
                                        },
                                        {
                                            "const": "number",
                                            "title": "Number"
                                        },
                                        {
                                            "const": "boolean",
                                            "title": "Boolean"
                                        },
                                        {
                                            "const": "constant",
                                            "title": "Constant"
                                        }
                                    ],
                                    "default": "text"
                                },
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    "math": {
                        "type": "object",
                        "properties": {
                            "fixedPointPrecision": {
                                "type": "integer",
                                "default": 6
                            }
                        }
                    },
                    "memoryPools": {
                        "type": "object",
                        "properties": {
                            "cleanUp": {
                                "type": "boolean",
                                "description": "Enabling clean-up will reset each byte of each free block to 0 on resetting the game. Use only for debugging! Proper object's initialization must make this macro unnecessary.",
                                "default": false
                            },
                            "warningThreshold": {
                                "type": "integer",
                                "description": "Percentage above which the memory pool's status shows the pool usage.",
                                "default": 85,
                                "minimum": 1,
                                "maximum": 100
                            },
                            "pools": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "objects": {
                                            "type": "integer",
                                            "default": 1,
                                            "minimum": 1
                                        },
                                        "size": {
                                            "type": "integer",
                                            "default": 1,
                                            "minimum": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "optics": {
                        "type": "object",
                        "properties": {
                            "baseFactor": {
                                "type": "integer",
                                "default": 32,
                                "minimum": 0
                            },
                            "cameraMinimumDisplacementPixelsPower": {
                                "type": "integer",
                                "default": 1,
                                "minimum": 0
                            },
                            "cameraNearPlane": {
                                "type": "integer",
                                "default": 0
                            },
                            "horizontalViewPointCenter": {
                                "type": "integer",
                                "default": 192,
                                "minimum": 0
                            },
                            "maximumXViewDistance": {
                                "type": "integer",
                                "default": 2048,
                                "minimum": 0
                            },
                            "maximumYViewDistance": {
                                "type": "integer",
                                "default": 4096,
                                "minimum": 0
                            },
                            "parallaxCorrectionFactor": {
                                "type": "integer",
                                "default": 4,
                                "minimum": 0
                            },
                            "scalingModifierFactor": {
                                "type": "integer",
                                "default": 1,
                                "minimum": 0
                            },
                            "screenDepth": {
                                "type": "integer",
                                "default": 2048,
                                "minimum": 0
                            },
                            "screenHeight": {
                                "type": "integer",
                                "default": 224,
                                "minimum": 0
                            },
                            "screenWidth": {
                                "type": "integer",
                                "default": 384,
                                "minimum": 0
                            },
                            "verticalViewPointCenter": {
                                "type": "integer",
                                "default": 112,
                                "minimum": 0
                            },
                            "useLegacyCoordinateProjection": {
                                "type": "boolean",
                                "default": false
                            }
                        }
                    },
                    "palettes": {
                        "type": "object",
                        "properties": {
                            "bgMapPalette0": {
                                "type": "string",
                                "default": "11100100"
                            },
                            "bgMapPalette1": {
                                "type": "string",
                                "default": "11100000"
                            },
                            "bgMapPalette2": {
                                "type": "string",
                                "default": "10010000"
                            },
                            "bgMapPalette3": {
                                "type": "string",
                                "default": "01010000"
                            },
                            "objectPalette0": {
                                "type": "string",
                                "default": "11100100"
                            },
                            "objectPalette1": {
                                "type": "string",
                                "default": "11100000"
                            },
                            "objectPalette2": {
                                "type": "string",
                                "default": "10010000"
                            },
                            "objectPalette3": {
                                "type": "string",
                                "default": "01010000"
                            },
                            "printingPalette": {
                                "type": "integer",
                                "description": "The BGMap palette that shall be used for text on the printing layer.",
                                "default": 0,
                                "maximum": 3,
                                "minimum": 0
                            }
                        }
                    },
                    "physics": {
                        "type": "object",
                        "properties": {
                            "angleToPreventShapeDisplacement": {
                                "type": "integer",
                                "description": "Minimum angle to allow movement when colliding against another object.",
                                "default": 10,
                                "minimum": 0,
                                "maximum": 128
                            },
                            "bodiesToCheckForGravity": {
                                "type": "integer",
                                "description": "Number of bodies to check for gravity on each cycle.",
                                "default": 10,
                                "minimum": 0
                            },
                            "frictionForceFactorPower": {
                                "type": "integer",
                                "default": 2,
                                "minimum": 0
                            },
                            "gravity": {
                                "type": "integer",
                                "default": 10,
                                "minimum": 0,
                                "maximum": 100
                            },
                            "highPrecision": {
                                "type": "boolean",
                                "default": false
                            },
                            "maximumBouncinessCoefficient": {
                                "type": "integer",
                                "description": "The maximum allowed bounciness coefficient.",
                                "default": 1,
                                "minimum": 0
                            },
                            "maximumFrictionCoefficient": {
                                "type": "integer",
                                "description": "The maximum allowed friction coefficient.",
                                "default": 1,
                                "minimum": 0,
                                "minimum": 256
                            },							
                            "stopBouncingVelocityThreshold": {
                                "type": "integer",
                                "default": 48,
                                "minimum": 0
                            },
                            "stopVelocityThreshold": {
                                "type": "integer",
                                "default": 8,
                                "minimum": 0
                            },
                            "timeElapsedDivisor": {
                                "type": "integer",
                                "description": "Divisor to speed up physics simulations. Bigger number equals faster computations.",
                                "default": 2,
                                "minimum": 0
                            }
                        }
                    },
                    "random": {
                        "type": "object",
                        "properties": {
                            "addUserInputAndTimeToRandomSeed": {
                                "type": "boolean",
                                "default": false
                            },
                            "seedCycles": {
                                "type": "integer",
                                "default": 2,
                                "minimum": 1
                            }
                        }
                    },
                    "sound": {
                        "type": "object",
                        "properties": {
                            "leftEarCenter": {
                                "type": "integer",
                                "default": 96
                            },
                            "rightEarCenter": {
                                "type": "integer",
                                "default": 288
                            },
                            "stereoHorizontalAttenuationFactor": {
                                "type": "integer",
                                "default": 50,
                                "minimum": 0
                            },
                            "stereoVerticalAttenuationFactor": {
                                "type": "integer",
                                "default": 50,
                                "minimum": 0
                            }
                        }
                    },
                    "sprite": {
                        "type": "object",
                        "properties": {
                            "totalLayers": {
                                "type": "integer",
                                "default": 32,
                                "minimum": 1
                            },
                            "hackBgmapSpriteHeight": {
                                "type": "boolean",
                                "default": true
                            }
                        }
                    },
                    "sram": {
                        "type": "object",
                        "properties": {
                            "totalSram": {
                                "type": "integer",
                                "description": "The amount of available SRAM space, in bytes. The Virtual Boy allows up to 16 MB, but most cartridges support only 8 kb of SRAM.",
                                "default": 8192,
                                "minimum": 0
                            }
                        }
                    },
                    "texture": {
                        "type": "object",
                        "properties": {
                            "bgmapsPerSegments": {
                                "type": "integer",
                                "description": "Number of BGMap specs in each BGMap segment.",
                                "default": 14,
                                "minimum": 0
                            },
                            "printing": {
                                "type": "object",
                                "properties": {
                                    "offset": {
                                        "type": "object",
                                        "properties": {
                                            "x": {
                                                "type": "integer",
                                                "default": 0,
                                                "minimum": 0
                                            },
                                            "y": {
                                                "type": "integer",
                                                "default": 0,
                                                "minimum": 0
                                            },
                                            "parallax": {
                                                "type": "integer",
                                                "default": 0,
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "printableArea": {
                                        "type": "integer",
                                        "default": 1792,
                                        "minimum": 0
                                    }
                                }
                            },
                            "paramTableSegments": {
                                "type": "integer",
                                "description": "Number of segments for param tables.",
                                "default": 1,
                                "minimum": 0
                            }
                        }
                    },
                    "wireframes": {
                        "type": "object",
                        "properties": {
                            "sort": {
                                "type": "boolean",
                                "default": true
                            },
                            "interlacedThreshold": {
                                "type": "object",
                                "description": "The distance to start interlacing wireframe graphics.",
								"type": "integer",
								"default": 4096,
								"maximum": 8191,
								"minimum": 512
                            }
						}	
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "Categorization",
                "elements": [
                    {
                        "type": "Category",
                        "label": "Affine",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/affine/properties/maxRowsPerCall"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/affine/properties/maxScale"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Animation",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/animation/properties/maxAnimationFunctionNameLength"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/animation/properties/maxFramesPerAnimationFunction"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Brightness",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "HorizontalLayout",
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/brightness/properties/brightRed"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/brightness/properties/mediumRed"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/brightness/properties/darkRed"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "HorizontalLayout",
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/brightness/properties/fadeDelay"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/brightness/properties/fadeIncrement"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Chars",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/chars/properties/totalChars"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Communications",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/communications/properties/enable"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Debug",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/debug/properties/alertVipOvertime"
                                    },
                                    {
                                        "type": "HorizontalLayout",
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/enableProfiler"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/dimmForProfiling"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/profileStreaming"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/showStreamingProfiling"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/debug/properties/printFramerate"
                                    },
                                    {
                                        "type": "HorizontalLayout",
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/showMemoryPoolStatus"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/showDetailedMemoryPoolStatus"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "HorizontalLayout",
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/stackHeadroom"
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/debug/properties/showStackOverflowAlert"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Exceptions",
                        "elements": [
                            {
                                "type": "Group",
                                "label": "Position",
                                "elements": [
                                    {
                                        "type": "HorizontalLayout",
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "label": false,
                                                "scope": "#/properties/exceptions/properties/position/properties/x"
                                            },
                                            {
                                                "type": "Control",
                                                "label": false,
                                                "scope": "#/properties/exceptions/properties/position/properties/y"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "FrameRate",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/frameRate/properties/forceVipSync"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/frameRate/properties/frameCycle"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/frameRate/properties/runDelayedMessagesAtHalfFrameRate"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/frameRate/properties/timerResolution"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Game specific Macros",
                        "elements": [
                            {
                                "type": "Control",
                                "scope": "#/properties/game"
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Math",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/math/properties/fixedPointPrecision"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "MemoryPools",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryPools/properties/cleanUp"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryPools/properties/warningThreshold"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/memoryPools/properties/pools"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Optics",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optics/properties/baseFactor"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optics/properties/cameraMinimumDisplacementPixelsPower"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optics/properties/cameraNearPlane"
                                    },
                                    {
                                        "type": "Group",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/maximumXViewDistance",
                                                        "label": "X"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/maximumYViewDistance",
                                                        "label": "Y"
                                                    }
                                                ]
                                            }
                                        ],
                                        "label": "Maximum View Distance"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optics/properties/parallaxCorrectionFactor"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optics/properties/scalingModifierFactor"
                                    },
                                    {
                                        "type": "Group",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/horizontalViewPointCenter",
                                                        "label": "Horizontal"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/verticalViewPointCenter",
                                                        "label": "Vertical"
                                                    }
                                                ]
                                            }
                                        ],
                                        "label": "View Point Center"
                                    },
                                    {
                                        "type": "Group",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/screenWidth",
                                                        "label": "Width"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/screenHeight",
                                                        "label": "Height"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/optics/properties/screenDepth",
                                                        "label": "Depth"
                                                    }
                                                ]
                                            }
                                        ],
                                        "label": "Screen Size"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/optics/properties/useLegacyCoordinateProjection"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Palettes",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/bgMapPalette0",
                                        "label": "BGMap Palette 0"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/bgMapPalette1",
                                        "label": "BGMap Palette 1"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/bgMapPalette2",
                                        "label": "BGMap Palette 2"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/bgMapPalette3",
                                        "label": "BGMap Palette 3"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/objectPalette0",
                                        "label": "Object Palette 0"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/objectPalette1",
                                        "label": "Object Palette 1"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/objectPalette2",
                                        "label": "Object Palette 2"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/objectPalette3",
                                        "label": "Object Palette 3"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/palettes/properties/printingPalette",
                                        "label": "Printing Palette"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Physics",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/bodiesToCheckForGravity"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/frictionForceFactorPower"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/gravity"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/maximumBouncinessCoefficient"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/stopBouncingVelocityThreshold"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/stopVelocityThreshold"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/physics/properties/timeElapsedDivisor"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Random",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/random/properties/addUserInputAndTimeToRandomSeed"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/random/properties/seedCycles"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Sound",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Group",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/sound/properties/leftEarCenter",
                                                        "label": "Left Ear"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/sound/properties/rightEarCenter",
                                                        "label": "Right Ear"
                                                    }
                                                ]
                                            }
                                        ],
                                        "label": "Center"
                                    },
                                    {
                                        "type": "Group",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/sound/properties/stereoHorizontalAttenuationFactor",
                                                        "label": "Horizontal"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/sound/properties/stereoVerticalAttenuationFactor",
                                                        "label": "Vertical"
                                                    }
                                                ]
                                            }
                                        ],
                                        "label": "Stereo Attenuation Factor"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Sprite",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/sprite/properties/totalLayers"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/sprite/properties/hackBgmapSpriteHeight"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "SRAM",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/sram/properties/totalSram",
                                        "label": "Total SRAM"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Texture",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/texture/properties/bgmapsPerSegments"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/texture/properties/paramTableSegments"
                                    },
                                    {
                                        "type": "Group",
                                        "label": "Printing Area Offset (x, y, parallax)",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "label": false,
                                                        "scope": "#/properties/texture/properties/printing/properties/offset/properties/x"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "label": false,
                                                        "scope": "#/properties/texture/properties/printing/properties/offset/properties/y"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "label": false,
                                                        "scope": "#/properties/texture/properties/printing/properties/offset/properties/parallax"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/texture/properties/printing/properties/printableArea"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Wireframes",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/wireframes/properties/sort"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "icon": "fa fa-sliders",
            "multiple": false,
            "category": "Configuration",
            "templates": [
                "config.h"
            ]
        },
        "Entity": {
            "schema": {
                "title": "Entity",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "class": {
                        "type": "string",
                        "default": "Entity"
                    },
                    "extraInfo": {
                        "type": "string",
                        "default": ""
                    },
                    "pixelSize": {
                        "type": "object",
                        "description": "Size of entity in pixels. Used by streaming to test if out of screen bounds. If 0, width and height will be inferred from the first sprite's texture's size.",
                        "properties": {
                            "x": {
                                "type": "number",
                                "minimum": 0
                            },
                            "y": {
                                "type": "number",
                                "minimum": 0
                            },
                            "z": {
                                "type": "number",
                                "minimum": 0
                            }
                        }
                    },
                    "animations": {
                        "type": "object",
                        "properties": {
                            "default": {
                                "type": "string",
                                "description": "Animation to play as a default when entity is created",
                                "default": "Default"
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of this animation",
                                            "default": "New"
                                        },
                                        "cycles": {
                                            "type": "integer",
                                            "description": "Number of cycles a frame of animation is displayed",
                                            "minimum": 0,
                                            "maximum": 255,
                                            "default": 8
                                        },
                                        "callback": {
                                            "type": "string",
                                            "description": "Name of method to call on animation completion",
                                            "default": ""
                                        },
                                        "loop": {
                                            "type": "boolean",
                                            "description": "Play this animation in a loop or stop after playing it once?",
                                            "default": false
                                        },
                                        "frames": {
                                            "type": "array",
                                            "description": "The frames to play in this animation",
                                            "items": {
                                                "type": "integer",
                                                "minimum": 0
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    "childEntities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    "collisions": {
                        "type": "object",
                        "properties": {
                            "inGameType": {
                                "type": "string",
                                "default": "None"
                            },
                            "shapes": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "oneOf": [
                                                {
                                                    "const": "LineField",
                                                    "title": "Line Field"
                                                },
                                                {
                                                    "const": "Box",
                                                    "title": "Box"
                                                },
                                                {
                                                    "const": "InverseBox",
                                                    "title": "Inverse Box"
                                                },
                                                {
                                                    "const": "Ball",
                                                    "title": "Ball"
                                                }
                                            ],
                                            "default": "Box"
                                        },
                                        "pixelSize": {
                                            "type": "object",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "minimum": 0
                                                }
                                            }
                                        },
                                        "displacement": {
                                            "type": "object",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "parallax": {
                                                    "type": "number",
                                                    "minimum": 0
                                                }
                                            }
                                        },
                                        "rotation": {
                                            "type": "object",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "minimum": 0
                                                }
                                            }
                                        },
                                        "scale": {
                                            "type": "object",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "minimum": 0
                                                }
                                            }
                                        },
                                        "checkForCollisions": {
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "layers": {
                                            "type": "string",
                                            "default": ""
                                        },
                                        "layersToIgnore": {
                                            "type": "string",
                                            "default": ""
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "meshes": {
                        "type": "object",
                        "properties": {
                            "meshes": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "fromVertex": {
                                            "type": "string",
                                            "default": ""
                                        },
                                        "toVertex": {
                                            "type": "string",
                                            "default": ""
                                        },
                                        "bufferIndex": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 255
                                        }
                                    }
                                }
                            }
                        },
                        "required": []
                    },
                    "physics": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "default": false
                            },
                            "mass": {
                                "type": "number"
                            },
                            "friction": {
                                "type": "number"
                            },
                            "bounciness": {
                                "type": "number"
                            },
                            "maximumVelocity": {
                                "type": "object",
                                "properties": {
                                    "x": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "y": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "z": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                }
                            },
                            "maximumSpeed": {
                                "type": "number"
                            }
                        }
                    },
                    "sprites": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": "Bgmap",
                                        "title": "Bgmap"
                                    },
                                    {
                                        "const": "Object",
                                        "title": "Object"
                                    }
                                ],
                                "default": "Bgmap"
                            },
                            "useZDisplacementInProjection": {
                                "type": "boolean",
                                "default": false
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "default": ""
                                        },
                                        "class": {
                                            "type": "string",
                                            "default": "BgmapSprite"
                                        },
                                        "bgmapMode": {
                                            "type": "string",
                                            "oneOf": [
                                                {
                                                    "const": "BGMAP",
                                                    "title": "Bgmap"
                                                },
                                                {
                                                    "const": "AFFINE",
                                                    "title": "Affine"
                                                },
                                                {
                                                    "const": "OBJECT",
                                                    "title": "Object"
                                                },
                                                {
                                                    "const": "HBIAS",
                                                    "title": "HBias"
                                                }
                                            ],
                                            "default": "BGMAP"
                                        },
                                        "displayMode": {
                                            "type": "string",
                                            "oneOf": [
                                                {
                                                    "const": "Both",
                                                    "title": "Display on both eyes"
                                                },
                                                {
                                                    "const": "Left",
                                                    "title": "Display on left eye only"
                                                },
                                                {
                                                    "const": "Right",
                                                    "title": "Display on right eye only"
                                                }
                                            ],
                                            "default": "Both"
                                        },
                                        "transparency": {
                                            "type": "string",
                                            "oneOf": [
                                                {
                                                    "const": "None",
                                                    "title": "No transparency"
                                                },
                                                {
                                                    "const": "Even",
                                                    "title": "Display only on even frames"
                                                },
                                                {
                                                    "const": "Odd",
                                                    "title": "Display only on odd frames"
                                                }
                                            ],
                                            "default": "None"
                                        },
                                        "displacement": {
                                            "type": "object",
                                            "properties": {
                                                "x": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "y": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "z": {
                                                    "type": "number",
                                                    "minimum": 0
                                                },
                                                "parallax": {
                                                    "type": "number",
                                                    "minimum": 0
                                                }
                                            }
                                        },
                                        "manipulationFunction": {
                                            "type": "string",
                                            "default": ""
                                        },
                                        "texture": {
                                            "type": "object",
                                            "properties": {
                                                "charset": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "oneOf": [
                                                                {
                                                                    "const": "animatedSingle",
                                                                    "title": "Animated (Single)"
                                                                },
                                                                {
                                                                    "const": "animatedSingleOptimized",
                                                                    "title": "Animated (Single Optimized)"
                                                                },
                                                                {
                                                                    "const": "animatedShared",
                                                                    "title": "Animated (Shared)"
                                                                },
                                                                {
                                                                    "const": "animatedSharedCoordinated",
                                                                    "title": "Animated (Shared Coordinated)"
                                                                },
                                                                {
                                                                    "const": "animatedMulti",
                                                                    "title": "Animated (Multi)"
                                                                },
                                                                {
                                                                    "const": "notAnimated",
                                                                    "title": "Not Animated"
                                                                }
                                                            ],
                                                            "default": "notAnimated"
                                                        }
                                                    }
                                                },
                                                "image": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "default": ""
                                                        },
                                                        "chars": {
                                                            "type": "integer",
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "padding": {
                                                    "type": "object",
                                                    "properties": {
                                                        "x": {
                                                            "type": "integer",
                                                            "minimum": 0
                                                        },
                                                        "y": {
                                                            "type": "integer",
                                                            "minimum": 0
                                                        }
                                                    }
                                                },
                                                "palette": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 3
                                                },
                                                "recycleable": {
                                                    "type": "boolean",
                                                    "default": false
                                                },
                                                "size": {
                                                    "type": "object",
                                                    "properties": {
                                                        "x": {
                                                            "type": "integer",
                                                            "minimum": 0
                                                        },
                                                        "y": {
                                                            "type": "integer",
                                                            "minimum": 0
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "name"
                ]
            },
            "uiSchema": {
                "type": "Categorization",
                "elements": [
                    {
                        "type": "Category",
                        "label": "General",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/name"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/class"
                                    },
                                    {
                                        "type": "Control",
                                        "scope": "#/properties/extraInfo"
                                    },
                                    {
                                        "type": "Group",
                                        "label": "Size (x, y, z)",
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "label": false,
                                                        "scope": "#/properties/pixelSize/properties/x"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "label": false,
                                                        "scope": "#/properties/pixelSize/properties/y"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "label": false,
                                                        "scope": "#/properties/pixelSize/properties/z"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Animations",
                        "elements": [
                            {}
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Behaviors",
                        "elements": [
                            {}
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Child Entities",
                        "elements": [
                            {}
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Collisions",
                        "elements": [
                            {}
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Meshes",
                        "elements": [
                            {}
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Physics",
                        "elements": [
                            {
                                "type": "VerticalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "label": "Enable physics",
                                        "scope": "#/properties/enabled"
                                    },
                                    {
                                        "type": "VerticalLayout",
                                        "rule": {
                                            "effect": "HIDE",
                                            "condition": {
                                                "scope": "#/properties/enabled",
                                                "schema": {
                                                    "const": false
                                                }
                                            }
                                        },
                                        "elements": [
                                            {
                                                "type": "HorizontalLayout",
                                                "elements": [
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/mass"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/friction"
                                                    },
                                                    {
                                                        "type": "Control",
                                                        "scope": "#/properties/bounciness"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "Group",
                                                "label": "Maximum Velocity (x, y, z)",
                                                "elements": [
                                                    {
                                                        "type": "HorizontalLayout",
                                                        "elements": [
                                                            {
                                                                "type": "Control",
                                                                "label": false,
                                                                "scope": "#/properties/maximumVelocity/properties/x"
                                                            },
                                                            {
                                                                "type": "Control",
                                                                "label": false,
                                                                "scope": "#/properties/maximumVelocity/properties/y"
                                                            },
                                                            {
                                                                "type": "Control",
                                                                "label": false,
                                                                "scope": "#/properties/maximumVelocity/properties/z"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "Control",
                                                "scope": "#/properties/maximumSpeed"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Category",
                        "label": "Sprites",
                        "elements": [
                            {}
                        ]
                    }
                ]
            },
            "multiple": true,
            "category": "Assets",
            "icon": "fa fa-id-card-o"
        },
        "Events": {
            "schema": {
                "title": "Events",
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "NewEvent"
                        }
                    }
                },
                "required": []
            },
            "icon": "fa fa-bullhorn",
            "multiple": false,
            "category": "Logic",
            "templates": [
                "GameEvents.h"
            ]
        },
        "Font": {
            "schema": {
                "title": "Font",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "offset": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 255
                    },
                    "characterCount": {
                        "type": "integer",
                        "default": 256,
                        "minimum": 1,
                        "maximum": 256
                    },
                    "size": {
                        "type": "object",
                        "properties": {
                            "x": {
                                "type": "integer",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 4
                            },
                            "y": {
                                "type": "integer",
                                "default": 1,
                                "minimum": 1,
                                "maximum": 4
                            }
                        }
                    },
                    "variableSize": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "default": false
                            },
                            "x": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "default": 8,
                                    "minimum": 1,
                                    "maximum": 32
                                },
                                "default": []
                            },
                            "y": {
                                "type": "integer",
                                "default": 8,
                                "minimum": 1,
                                "maximum": 32
                            }
                        }
                    },
                    "section": {
                        "type": "string",
                        "oneOf": [
                            {
                                "const": "rom",
                                "title": "ROM Space"
                            },
                            {
                                "const": "exp",
                                "title": "Expansion Space"
                            }
                        ],
                        "default": "rom"
                    },
                    "compression": {
                        "type": "string",
                        "oneOf": [
                            {
                                "const": "none",
                                "title": "None"
                            },
                            {
                                "const": "rle",
                                "title": "RLE"
                            }
                        ],
                        "default": "none"
                    },
                    "characters": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 3
                                }
                            }
                        },
                        "default": []
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "FontEditor",
                "scope": "#"
            },
            "multiple": true,
            "category": "Assets",
            "icon": "fa fa-font",
            "templates": [
                "Fonts.c",
                "Fonts.h",
                "FontSpec.c"
            ]
        },
        "Image": {
            "schema": {
                "title": "Image",
                "properties": {
                    "folder": {
                        "type": "string",
                        "default": ""
                    },
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "section": {
                        "type": "string",
                        "oneOf": [
                            {
                                "const": "rom",
                                "title": "ROM Space"
                            },
                            {
                                "const": "exp",
                                "title": "Expansion Space"
                            }
                        ],
                        "default": "rom"
                    },
                    "tileset": {
                        "type": "object",
                        "properties": {
                            "shared": {
                                "type": "boolean",
                                "default": false
                            },
                            "reduce": {
                                "type": "boolean",
                                "default": false
                            },
                            "compress": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": "off",
                                        "title": "No compression"
                                    },
                                    {
                                        "const": "rle",
                                        "title": "Run Length Encoding (RLE)"
                                    }
                                ],
                                "default": "off"
                            }
                        }
                    },
                    "map": {
                        "type": "object",
                        "properties": {
                            "generate": {
                                "type": "boolean",
                                "default": true
                            },
                            "reduce": {
                                "type": "object",
                                "properties": {
                                    "flipped": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "unique": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            },
                            "compress": {
                                "type": "string",
                                "oneOf": [
                                    {
                                        "const": "off",
                                        "title": "No compression"
                                    },
                                    {
                                        "const": "rle",
                                        "title": "Run Length Encoding (RLE)"
                                    }
                                ],
                                "default": "off"
                            }
                        }
                    },
                    "animation": {
                        "type": "object",
                        "properties": {
                            "isAnimation": {
                                "type": "boolean",
                                "default": false
                            },
                            "individualFiles": {
                                "type": "boolean",
                                "default": false
                            },
                            "frameWidth": {
                                "type": "integer",
                                "default": 0
                            },
                            "frameHeight": {
                                "type": "integer",
                                "default": 0
                            }
                        }
                    },
                    "_converted": {
                        "type": "array",
                        "items": {
                            "image": {
                                "type": "string",
                                "default": ""
                            },
                            "timestamp": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string",
                                "default": ""
                            },
                            "tiles": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "required": [
                    "images",
                    "section"
                ]
            },
            "uiSchema": {
                "type": "VerticalLayout",
                "elements": [
                    {
                        "type": "Control",
                        "label": "Images",
                        "scope": "#/properties/_converted"
                    },
                    {
                        "type": "Control",
                        "label": "Folder",
                        "scope": "#/properties/folder"
                    },
                    {
                        "type": "Control",
                        "label": "Name",
                        "scope": "#/properties/name"
                    },
                    {
                        "type": "Control",
                        "label": "Store in",
                        "scope": "#/properties/section"
                    },
                    {
                        "type": "Group",
                        "label": "Charset",
                        "elements": [
                            {
                                "type": "HorizontalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "label": "Shared",
                                        "scope": "#/properties/tileset/properties/shared"
                                    },
                                    {
                                        "type": "Control",
                                        "label": "Reduction",
                                        "scope": "#/properties/tileset/properties/reduce"
                                    },
                                    {
                                        "type": "Control",
                                        "label": "Compression",
                                        "scope": "#/properties/tileset/properties/compress"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Group",
                        "label": "Map",
                        "elements": [
                            {
                                "type": "Control",
                                "label": "Generate",
                                "scope": "#/properties/map/properties/generate"
                            },
                            {
                                "type": "HorizontalLayout",
                                "rule": {
                                    "effect": "HIDE",
                                    "condition": {
                                        "scope": "#/properties/map/properties/generate",
                                        "schema": {
                                            "const": false
                                        }
                                    }
                                },
                                "elements": [
                                    {
                                        "type": "Control",
                                        "label": "Reduce Flipped",
                                        "scope": "#/properties/map/properties/reduce/properties/flipped"
                                    },
                                    {
                                        "type": "Control",
                                        "label": "Reduce Unique",
                                        "scope": "#/properties/map/properties/reduce/properties/unique"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Group",
                        "label": "Animation",
                        "elements": [
                            {
                                "type": "Control",
                                "label": "Is Animation",
                                "scope": "#/properties/animation/properties/isAnimation"
                            },
                            {
                                "type": "VerticalLayout",
                                "rule": {
                                    "effect": "HIDE",
                                    "condition": {
                                        "scope": "#/properties/animation/properties/isAnimation",
                                        "schema": {
                                            "const": false
                                        }
                                    }
                                },
                                "elements": [
                                    {
                                        "type": "Control",
                                        "label": "Frames are individual images",
                                        "scope": "#/properties/animation/properties/individualFiles"
                                    },
                                    {
                                        "type": "HorizontalLayout",
                                        "rule": {
                                            "effect": "HIDE",
                                            "condition": {
                                                "scope": "#/properties/animation/properties/individualFiles",
                                                "schema": {
                                                    "const": true
                                                }
                                            }
                                        },
                                        "elements": [
                                            {
                                                "type": "Control",
                                                "label": "Width",
                                                "scope": "#/properties/animation/properties/frameWidth"
                                            },
                                            {
                                                "type": "Control",
                                                "label": "Height",
                                                "scope": "#/properties/animation/properties/frameHeight"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "multiple": true,
            "category": "Assets",
            "icon": "fa fa-image"
        },
        "Messages": {
            "schema": {
                "title": "Messages",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "NewMessage"
                        }
                    }
                },
                "required": []
            },
            "icon": "fa fa-commenting-o",
            "multiple": false,
            "category": "Logic"
        },
        "Project": {
            "schema": {
                "title": "Project",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "author": {
                        "type": "string",
                        "default": ""
                    },
                    "description": {
                        "type": "string",
                        "default": ""
                    }
                },
                "required": [
                    "name"
                ]
            },
            "uiSchema": {
                "type": "VerticalLayout",
                "elements": [
                    {
                        "type": "Control",
                        "label": "Project Name",
                        "scope": "#/properties/name"
                    },
                    {
                        "type": "Control",
                        "label": "Author(s)",
                        "scope": "#/properties/author"
                    },
                    {
                        "type": "Control",
                        "label": "Description",
                        "scope": "#/properties/description"
                    }
                ]
            },
            "icon": "fa fa-cog",
            "multiple": false,
            "category": "Configuration"
        },
        "RomHeader": {
            "schema": {
                "title": "ROM Header",
                "properties": {
                    "gameTitle": {
                        "type": "string",
                        "description": "The game's title",
                        "minLength": 0,
                        "maxLength": 20,
                        "default": "VUENGINE PROJECT"
                    },
                    "gameCodeSystem": {
                        "type": "string",
                        "description": "Always \"V\" for \"VUE\"",
                        "minLength": 1,
                        "maxLength": 1,
                        "default": "V"
                    },
                    "gameCodeId": {
                        "type": "string",
                        "description": "Unique game identifier",
                        "minLength": 2,
                        "maxLength": 2,
                        "default": "VU"
                    },
                    "gameCodeLanguage": {
                        "type": "string",
                        "description": "In-game language",
                        "minLength": 1,
                        "maxLength": 1,
                        "default": "E"
                    },
                    "makerCode": {
                        "type": "string",
                        "description": "Unique identifier of the game's developer",
                        "minLength": 2,
                        "maxLength": 2,
                        "default": ""
                    },
                    "revision": {
                        "type": "integer",
                        "description": "Version of the game, should be counted up with every release",
                        "minimum": 0,
                        "maximum": 9,
                        "default": 0
                    }
                },
                "required": [
                    "gameTitle",
                    "gameCodeSystem",
                    "gameCodeId",
                    "gameCodeLanguage",
                    "makerCode",
                    "revision"
                ]
            },
            "uiSchema": {
                "type": "VerticalLayout",
                "elements": [
                    {
                        "type": "Control",
                        "label": "Game Title",
                        "scope": "#/properties/gameTitle"
                    },
                    {
                        "type": "Group",
                        "label": "Game Code",
                        "elements": [
                            {
                                "type": "HorizontalLayout",
                                "elements": [
                                    {
                                        "type": "Control",
                                        "label": "System",
                                        "scope": "#/properties/gameCodeSystem"
                                    },
                                    {
                                        "type": "Control",
                                        "label": "ID",
                                        "scope": "#/properties/gameCodeId"
                                    },
                                    {
                                        "type": "Control",
                                        "label": "Language",
                                        "scope": "#/properties/gameCodeLanguage"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Control",
                        "label": "Maker Code",
                        "scope": "#/properties/makerCode"
                    },
                    {
                        "type": "Control",
                        "label": "Revision",
                        "scope": "#/properties/revision",
                        "options": {
                            "inputPrefix": "1."
                        }
                    }
                ]
            },
            "icon": "fa fa-microchip",
            "multiple": false,
            "category": "Configuration",
            "templates": [
                "romHeader.h"
            ]
        },
        "RumbleEffect": {
            "schema": {
                "title": "Rumble Effect",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "effect": {
                        "type": "integer",
                        "default": 0,
                        "maximum": 123,
                        "minimum": 0
                    },
                    "frequency": {
                        "type": "integer",
                        "default": 0
                    },
                    "sustainPositive": {
                        "type": "integer",
                        "maximum": 255,
                        "minimum": 0,
                        "default": 255
                    },
                    "sustainNegative": {
                        "type": "integer",
                        "maximum": 255,
                        "minimum": 0,
                        "default": 255
                    },
                    "overdrive": {
                        "type": "integer",
                        "maximum": 255,
                        "minimum": 0,
                        "default": 255
                    },
                    "break": {
                        "type": "integer",
                        "maximum": 255,
                        "minimum": 0,
                        "default": 255
                    },
                    "stopBeforeStarting": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "RumbleEffectEditor",
                "scope": "#"
            },
            "multiple": true,
            "category": "Effects",
            "icon": "codicon codicon-screen-full codicon-rotate-90",
            "templates": [
                "RumbleEffectSpec.c",
                "RumbleEffects.h"
            ]
        },
        "Song": {
            "schema": {
                "title": "Song",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "default": 0
                                },
                                "instrument": {
                                    "type": "integer",
                                    "default": 0
                                },
                                "sequence": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "default": 0
                                    }
                                },
                                "patterns": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "default": ""
                                            },
                                            "size": {
                                                "type": "integer",
                                                "default": 32
                                            },
                                            "notes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "volumeL": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "volumeR": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "effects": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "default": ""
                                                }
                                            }
                                        }
                                    }
                                },
                                "volume": {
                                    "type": "integer",
                                    "default": 100
                                },
                                "muted": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "solo": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "collapsed": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "default": [
                            {
                                "id": 0,
                                "instrument": 0,
                                "sequence": [
                                    0
                                ],
                                "patterns": [
                                    {
                                        "name": "",
                                        "size": 32,
                                        "notes": [],
                                        "volumeL": [],
                                        "volumeR": [],
                                        "effects": []
                                    }
                                ],
                                "volume": 100,
                                "muted": false,
                                "solo": false,
                                "collapsed": false
                            },
                            {
                                "id": 1,
                                "instrument": 0,
                                "sequence": [],
                                "patterns": [],
                                "volume": 100,
                                "muted": false,
                                "solo": false,
                                "collapsed": false
                            },
                            {
                                "id": 2,
                                "instrument": 0,
                                "sequence": [],
                                "patterns": [],
                                "volume": 100,
                                "muted": false,
                                "solo": false,
                                "collapsed": false
                            },
                            {
                                "id": 3,
                                "instrument": 0,
                                "sequence": [],
                                "patterns": [],
                                "volume": 100,
                                "muted": false,
                                "solo": false,
                                "collapsed": false
                            },
                            {
                                "id": 4,
                                "instrument": 0,
                                "sequence": [],
                                "patterns": [],
                                "volume": 100,
                                "muted": false,
                                "solo": false,
                                "collapsed": false
                            },
                            {
                                "id": 5,
                                "instrument": 0,
                                "sequence": [],
                                "patterns": [],
                                "volume": 100,
                                "muted": false,
                                "solo": false,
                                "collapsed": false
                            }
                        ]
                    },
                    "instruments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        },
                        "default": [
                            {
                                "name": "Synth"
                            }
                        ]
                    },
                    "volume": {
                        "type": "integer",
                        "default": 100
                    },
                    "speed": {
                        "type": "integer",
                        "default": 300
                    },
                    "bar": {
                        "type": "integer",
                        "default": 4
                    },
                    "defaultPatternSize": {
                        "type": "integer",
                        "default": 32
                    }
                },
                "required": []
            },
            "uiSchema": {
                "type": "MusicEditor",
                "scope": "#"
            },
            "multiple": true,
            "category": "Assets",
            "icon": "fa fa-music"
        },
        "WaveForm": {
            "schema": {
                "title": "WaveForm",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": ""
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "maximum": 63,
                            "minimum": 0
                        },
                        "maxItems": 32,
                        "minItems": 32
                    }
                },
                "required": []
            },
            "multiple": true,
            "category": "Assets",
            "icon": "fa fa-bar-chart-o",
            "templates": [
                "WaveFormSpec.c",
                "WaveForms.h"
            ]
        }
    }
}