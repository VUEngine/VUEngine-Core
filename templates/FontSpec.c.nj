{%- import 'templates/partials/macros.nj' as macros -%}
{% include('templates/partials/fileHeader.c.nj') %}

{{ macros.sectionHeader('Includes') }}

#include <Printing.h>


{{ macros.sectionHeader('Declarations') }}

const uint32 {{ item.name }}FontTiles[{{ 1 + item.characterCount * 4 }}] __attribute__((aligned(4)))
{%- if item.section == 'exp' %} __attribute((section(".expdata"))){% endif %} =
{
	0x00000000,
	{% set block = '' -%}
	{%- set blocksThisLine = 0 -%}
	{%- set currentByte = '' -%}

    {%- for c in range(item.offset, item.offset + item.characterCount) -%}
        {%- for y in range(0, item.size.y * 8) -%}
            {%- for x in range(0, item.size.x * 8) -%}
                {%- set pixel = item.characters[c][y][x] | default(0) -%}
                {%- set currentByte = [pixel | intToBin(2), currentByte] | join -%}

                {%- if currentByte | length === 4 -%}
                    {%- set block = [currentByte | binToHex, block] | join -%}
                    {%- set currentByte = '' -%}
                {%- endif -%}

                {%- if block | length === 8 -%}
                    0x{{ block }},
                    {%- set block = '' -%}
                    {%- set blocksThisLine = blocksThisLine + 1 -%}
                {%- endif -%}

                {%- if blocksThisLine ===  8 and not loop.last -%}
                    {{- "\n    " -}}
                    {%- set blocksThisLine = 0 -%}
                {%- endif -%}

            {%- endfor -%}
        {%- endfor -%}
    {%- endfor %}
};


{{ macros.sectionHeader('Definitions') }}

CharSetROMSpec {{ item.name | sanitizeSpecName }}FontCharSet =
{
	// number of chars
	{{ item.characterCount * item.size.x * item.size.y }},

	// allocation type
	__NOT_ANIMATED,

	// char data
	(uint32*){{ item.name }}FontTiles,

	// pointer to the frames offsets
	NULL,
};

FontROMSpec {{ item.name | sanitizeSpecName }}Font =
{
	// font charset spec pointer
	(CharSetSpec*)&{{ item.name }}FontCharSet,

	// character number at which the font starts, allows you to skip the control characters for example
	{{ item.offset }},

	// number of characters in this font
	{{ item.characterCount }},

	// number of characters per line in charset
	16,

	// size of a single character (in chars) ({width, height})
	{{ "{" }}{{ item.size.x }}, {{ item.size.y }}{{ "}" }},

	// font's name
	"{{ item.name }}",
};
