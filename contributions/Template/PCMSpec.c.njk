{%- set sanitizedSpecName = itemUri | basename(false) | sanitizeSpecName -%}
{%- set soundData = itemUri | convertPcm(item.sourceFile, item.range) -%}

{%- import 'templates/partials/macros.njk' as macros -%}
{% include('templates/partials/fileHeader/fileHeader.c.njk') %}

{{ macros.sectionHeader('Includes') }}

#include <SoundManager.h>
#include <WaveForms.h>


{{ macros.sectionHeader('Declarations') }}

#define {{ sanitizedSpecName }}SoundTrackLength {{ soundData | length }}

const uint8 {{ sanitizedSpecName }}SoundTrack[]
{%- if item.section == 'data' %} __attribute((section(".rodata"))){% endif %}
{%- if item.section == 'exp' %} __attribute((section(".expdata"))){% endif %} =
{
#ifndef REDUCE_PCM_DATA
    {% for soundDataValue in soundData -%}
    {{  soundDataValue | intToHex(2) }},
    {%- if loop.index % 16 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- endfor %}
#endif
};


{{ macros.sectionHeader('Definitions') }}

SoundChannelConfigurationROM {{ sanitizedSpecName }}SoundChannelConfiguration =
{
	// Type (kMIDI or kPCM)
	kPCM,

	// SxINT
	0x00,

	// Volume SxLRV
	0x00,

	// SxRAM (this is overrode by the SoundManager)
	0x00,

	// SxEV0
	0xF0,

	// SxEV1
	0x00,

	// SxFQH
	0x00,

	// SxFQL
	0x00,

	// Ch. 5 only
	0x00,

	// Waveform data pointer
	PCMWaveForm,

	// kChannelNormal, kChannelModulation, kChannelNoise
	kChannelNormal,

	// Volume
	__SOUND_LR
};

SoundChannelROM {{ sanitizedSpecName }}SoundChannel =
{
	// Configuration
	(SoundChannelConfiguration*) &{{ sanitizedSpecName }}SoundChannelConfiguration,

	// Total number of samples
	{{ sanitizedSpecName }}SoundTrackLength,

	// Sound track
	{
		{{ sanitizedSpecName }}SoundTrack
	}
};

SoundChannelROM* const {{ sanitizedSpecName }}SoundChannels[] =
{
    {% for i in range(0, item.range) -%}
        &{{ sanitizedSpecName }}SoundChannel,
    {% endfor -%}
	NULL
};

SoundROMSpec {{ sanitizedSpecName }}SoundSpec =
{
	// Name
	"{{ sanitizedSpecName }}",

	// Play in loop
	{{ item.loop }},

	// Target timer resolution in us
	100,

	// Tracks
	(SoundChannel**){{ sanitizedSpecName }}SoundChannels
};
